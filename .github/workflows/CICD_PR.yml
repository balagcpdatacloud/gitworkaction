# This is a basic workflow to help you get started with Actions
name: CD

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  pull_request:
    branches: [dev,test]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # Find the branch name and create environment file
  
  # This workflow contains a single job called "deploy"
  deploy:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Add "id-token" with the intended permissions.
    permissions:
      contents: "read"
      id-token: "write"

    # Steps represent a sequence of tasks that wll be executed as part of the job
    steps:
   
    # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      - id: "auth"
        name: "Authenticate to Google Cloud"
        uses: "google-github-actions/auth@v0"
        with:
          # Replace with your Workload Identity Provider Location
          workload_identity_provider: "projects/915181581756/locations/global/workloadIdentityPools/github-identity-pool/providers/github"
          # Replace with your GitHub Service Account
          service_account: "github-actions-service-account@datacloud-346017.iam.gserviceaccount.com"
      - name: "setup Terraform"
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: 1.1.7
      - name: Branch name
        run: echo running on branch ${GITHUB_REF##*/} 
      - name: Extract branch name
        shell: bash
        run: echo "##[set-output name=branch;]$(echo ${GITHUB_REF#refs/heads/})"
        id: extract_branch
      - name: print name of variable
        run: echo "extracted branch name is :${{ steps.extract_branch.outputs.branch }}"
      - name: Terraform Format Check
        run: terraform fmt -check
      - name: Terraform Init
        shell: bash
        run: |
          terraform init -backend-config=prefix=${{steps.extract_branch.outputs.branch}}
      - name: Terraform validate
        run: terraform validate -no-color
      - name: Terraform plan
        shell: bash
        run: |
           terraform plan -var-file=${{steps.extract_branch.outputs.branch}}.tfvars -out=deployment.plan
      
